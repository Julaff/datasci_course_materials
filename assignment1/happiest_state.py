import json
import sys
import operator

def lines(fp):
    print str(len(fp.readlines()))

def main():
    sent_file = open(sys.argv[1])
    tweet_file = open(sys.argv[2])
    cities_states = {
      'New York': 'NY',
      'Los Angeles': 'CA',
      'Chicago': 'IL',
      'Houston': 'TX',
      'Philadelphia': 'PA',
      'Phoenix': 'AZ',
      'San Antonio': 'TX',
      'San Diego': 'CA',
      'Dallas': 'TX',
      'San Jose': 'CA',
      'Austin': 'TX',
      'INpolis': 'IN',
      'Jacksonville': 'FL',
      'San Francisco': 'CA',
      'Columbus': 'OH',
      'Charlotte': 'NC',
      'Fort Worth': 'TX',
      'Detroit': 'MI',
      'El Paso': 'TX',
      'Memphis': 'TN',
      'Seattle': 'WA',
      'Denver': 'CO',
      'Washington': 'DC',
      'Boston': 'MA',
      'Nashville': 'TN',
      'Baltimore': 'MD',
      'Oklahoma City': 'OK',
      'Louisville': 'KY',
      'Portland': 'OR',
      'Las Vegas': 'NV',
      'Milwaukee': 'WI',
      'Albuquerque': 'NM',
      'Tucson': 'AZ',
      'Fresno': 'CA',
      'Sacramento': 'CA',
      'Long Beach': 'CA',
      'Kansas City': 'MO',
      'Mesa': 'AZ',
      'Virginia Beach': 'VA',
      'Atlanta': 'GA',
      'Colorado Springs': 'CO',
      'Omaha': 'NE',
      'Raleigh': 'NC',
      'Miami': 'FL',
      'Oakland': 'CA',
      'Minneapolis': 'MN',
      'Tulsa': 'OK',
      'Cleveland': 'OH',
      'Wichita': 'KS',
      'Arlington': 'TX',
      'New Orleans': 'LA',
      'Bakersfield': 'CA',
      'Tampa': 'FL',
      'Honolulu': 'Hawai\'i',
      'Aurora': 'CO',
      'Anaheim': 'CA',
      'Santa Ana': 'CA',
      'St. Louis': 'MO',
      'Riverside': 'CA',
      'Corpus Christi': 'TX',
      'Lexington': 'KY',
      'Pittsburgh': 'PA',
      'Anchorage': 'AK',
      'Stockton': 'CA',
      'Cincinnati': 'OH',
      'Saint Paul': 'MN',
      'Toledo': 'OH',
      'Greensboro': 'NC',
      'Newark': 'NJ',
      'Plano': 'TX',
      'Henderson': 'NV',
      'Lincoln': 'NE',
      'Buffalo': 'NY',
      'Jersey City': 'NJ',
      'Chula Vista': 'CA',
      'Fort Wayne': 'IN',
      'Orlando': 'FL',
      'St. Petersburg': 'FL',
      'Chandler': 'AZ',
      'Laredo': 'TX',
      'Norfolk': 'VA',
      'Durham': 'NC',
      'Madison': 'WI',
      'Lubbock': 'TX',
      'Irvine': 'CA',
      'Winston-Salem': 'NC',
      'Glendale': 'AZ',
      'Garland': 'TX',
      'Hialeah': 'FL',
      'Reno': 'NV',
      'Chesapeake': 'VA',
      'Gilbert': 'AZ',
      'Baton Rouge': 'LA',
      'Irving': 'TX',
      'Scottsdale': 'AZ',
      'North Las Vegas': 'NV',
      'Fremont': 'CA',
      'Boise': 'ID',
      'Richmond': 'VA',
      'San Bernardino': 'CA',
      'Birmingham': 'AL',
      'Spokane': 'WA',
      'Rochester': 'NY',
      'Des Moines': 'IA',
      'Modesto': 'CA',
      'Fayetteville': 'NC',
      'Tacoma': 'WA',
      'Oxnard': 'CA',
      'Fontana': 'CA',
      'Columbus': 'GA',
      'Montgomery': 'AL',
      'Moreno Valley': 'CA',
      'Shreveport': 'LA',
      'Aurora': 'IL',
      'Yonkers': 'NY',
      'Akron': 'OH',
      'Huntington Beach': 'CA',
      'Little Rock': 'AR',
      'Augusta': 'GA',
      'Amarillo': 'TX',
      'Glendale': 'CA',
      'Mobile': 'AL',
      'Grand Rapids': 'MI',
      'Salt Lake City': 'UT',
      'Tallahassee': 'FL',
      'Huntsville': 'AL',
      'Grand Prairie': 'TX',
      'Knoxville': 'TN',
      'Worcester': 'MA',
      'Newport News': 'VA',
      'Brownsville': 'TX',
      'Overland Park': 'KS',
      'Santa Clarita': 'CA',
      'Providence': 'RI',
      'Garden Grove': 'CA',
      'Chattanooga': 'TN',
      'Oceanside': 'CA',
      'Jackson': 'MS',
      'Fort Lauderdale': 'FL',
      'Santa Rosa': 'CA',
      'Rancho Cucamonga': 'CA',
      'Port St. Lucie': 'FL',
      'Tempe': 'AZ',
      'Ontario': 'CA',
      'Vancouver': 'WA',
      'Cape Coral': 'FL',
      'Sioux Falls': 'SD',
      'Springfield': 'MO',
      'Peoria': 'AZ',
      'Pembroke Pines': 'FL',
      'Elk Grove': 'CA',
      'Salem': 'OR',
      'Lancaster': 'CA',
      'Corona': 'CA',
      'Eugene': 'OR',
      'Palmdale': 'CA',
      'Salinas': 'CA',
      'Springfield': 'MA',
      'Pasadena': 'TX',
      'Fort Collins': 'CO',
      'Hayward': 'CA',
      'Pomona': 'CA',
      'Cary': 'NC',
      'Rockford': 'IL',
      'Alexandria': 'VA',
      'Escondido': 'CA',
      'McKinney': 'TX',
      'Kansas City': 'KS',
      'Joliet': 'IL',
      'Sunnyvale': 'CA',
      'Torrance': 'CA',
      'Bridgeport': 'CT',
      'Lakewood': 'CO',
      'Hollywood': 'FL',
      'Paterson': 'NJ',
      'Naperville': 'IL',
      'Syracuse': 'NY',
      'Mesquite': 'TX',
      'Dayton': 'OH',
      'Savannah': 'GA',
      'Clarksville': 'TN',
      'Orange': 'CA',
      'Pasadena': 'CA',
      'Fullerton': 'CA',
      'Killeen': 'TX',
      'Frisco': 'TX',
      'Hampton': 'VA',
      'McAllen': 'TX',
      'Warren': 'MI',
      'Bellevue': 'WA',
      'West Valley City': 'UT',
      'Columbia': 'SC',
      'Olathe': 'KS',
      'Sterling Heights': 'MI',
      'New Haven': 'CT',
      'Miramar': 'FL',
      'Waco': 'TX',
      'Thousand Oaks': 'CA',
      'Cedar Rapids': 'IA',
      'Charleston': 'SC',
      'Visalia': 'CA',
      'Topeka': 'KS',
      'Elizabeth': 'NJ',
      'Gainesville': 'FL',
      'Thornton': 'CO',
      'Roseville': 'CA',
      'Carrollton': 'TX',
      'Coral Springs': 'FL',
      'Stamford': 'CT',
      'Simi Valley': 'CA',
      'Concord': 'CA',
      'Hartford': 'CT',
      'Kent': 'WA',
      'Lafayette': 'LA',
      'Midland': 'TX',
      'Surprise': 'AZ',
      'Denton': 'TX',
      'Victorville': 'CA',
      'Evansville': 'IN',
      'Santa Clara': 'CA',
      'Abilene': 'TX',
      'Athens': 'GA',
      'Vallejo': 'CA',
      'Allentown': 'PA',
      'Norman': 'OK',
      'Beaumont': 'TX',
      'Independence': 'MO',
      'Murfreesboro': 'TN',
      'Ann Arbor': 'MI',
      'Springfield': 'IL',
      'Berkeley': 'CA',
      'Peoria': 'IL',
      'Provo': 'UT',
      'El Monte': 'CA',
      'Columbia': 'MO',
      'Lansing': 'MI',
      'Fargo': 'ND',
      'Downey': 'CA',
      'Costa Mesa': 'CA',
      'Wilmington': 'NC',
      'Arvada': 'CO',
      'Inglewood': 'CA',
      'Miami Gardens': 'FL',
      'Carlsbad': 'CA',
      'Westminster': 'CO',
      'Rochester': 'MN',
      'Odessa': 'TX',
      'Manchester': 'NH',
      'Elgin': 'IL',
      'West Jordan': 'UT',
      'Round Rock': 'TX',
      'Clearwater': 'FL',
      'Waterbury': 'CT',
      'Gresham': 'OR',
      'Fairfield': 'CA',
      'Billings': 'MT',
      'Lowell': 'MA',
      'Ventura': 'CA',
      'Pueblo': 'CO',
      'High Point': 'NC',
      'West Covina': 'CA',
      'Richmond': 'CA',
      'Murrieta': 'CA',
      'Cambridge': 'MA',
      'Antioch': 'CA',
      'Temecula': 'CA',
      'Norwalk': 'CA',
      'Centennial': 'CO',
      'Everett': 'WA',
      'Palm Bay': 'FL',
      'Wichita Falls': 'TX',
      'Green Bay': 'WI',
      'Daly City': 'CA',
      'Burbank': 'CA',
      'Richardson': 'TX',
      'Pompano Beach': 'FL',
      'North Charleston': 'SC',
      'Broken Arrow': 'OK',
      'Boulder': 'CO',
      'West Palm Beach': 'FL',
      'Santa Maria': 'CA',
      'El Cajon': 'CA',
      'Davenport': 'IA',
      'Rialto': 'CA',
      'Las Cruces': 'NM',
      'San Mateo': 'CA',
      'Lewisville': 'TX',
      'South Bend': 'IN',
      'Lakeland': 'FL',
      'Erie': 'PA',
      'Tyler': 'TX',
      'Pearland': 'TX',
      'College Station': 'TX'
    }
    scores = {} # initialize an empty dictionary
    stateSentiments = {}
    for line in sent_file:
      term, score  = line.split("\t")  # The file is tab-delimited. "\t" means "tab character"
      scores[term] = int(score)  # Convert the score to an integer.
    for line in tweet_file:
      converted = json.loads(line)
      tweet = converted.get('text',"").encode('utf-8')
      s = 0
      for i in range(len(tweet.split())):
        word = tweet.split()[i]
#        print word
        if word in scores:
          s = s + scores[word]
      if 'user' in converted:
        if len(converted['user']['location']) > 0:
          location = converted['user']['location'].encode('UTF-8')
#          print location
          for i in range(len(location.split())):
            city = location.split()[i]
            if city in cities_states:
              if cities_states[city] in stateSentiments:
                stateSentiments[cities_states[city]] = stateSentiments[cities_states[city]] + s
              else:
                stateSentiments[cities_states[city]] = s
    sortedStateSentiments = sorted(stateSentiments.iteritems(), key=operator.itemgetter(1), reverse=True)
    for i in range(1):
      print '{}'.format(sortedStateSentiments[i][0])

#    print scores.items() # Print every (term, score) pair in the dictionary
#    print(len(scores))
#    lines(tweet_file)
#    print scores.viewkeys()
if __name__ == '__main__':
    main()
